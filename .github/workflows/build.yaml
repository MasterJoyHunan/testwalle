name: Build Docker Image

on:
  push:
    branches:
      - master

jobs:

  build:
    name: Test with go ${{ matrix.go_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    environment:
      name: helloci

    strategy:
      matrix:
        go_version: [1.16]
        os: [ubuntu-latest]

    steps:
      - name: Export tag
        run: |
          export COMMIT_TIME=$(date +%Y_%m_%d_%H_%M)
          
      - name: Echo tag
        run: |
          echo ${COMMIT_TIME}
      
      # 1.准备一个 Go 编译环境。
      - name: Set up Go ${{ matrix.go_version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
        id: go

      # 2.下载源码。
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      # 3.添加或删除缺失的依赖包。
      - name: Tidy
        run: |
          go mod tidy

      # 4.编译 Go 源码
      - name: Build
        run: |
          go build -v -o mini_http ./main.go

      # 5.上传构建产物。
      - name: Collect main.go file
        uses: actions/upload-artifact@v1.0.0
        with:
          name: main-output
          path: main.go

      # 6.构建镜像，并将镜像 push 到远程仓库
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-GitHub-Action@master
        with:
          name: registry.cn-hangzhou.aliyuncs.com/tanwuyang/walle-test:${COMMIT_TIME}  # docker image 的名字
          username: ${{ secrets.DOCKER_USERNAME}} # 用户名
          password: ${{ secrets.DOCKER_PASSWORD }} # 密码
          registry: registry.cn-hangzhou.aliyuncs.com # 腾讯云Registry
          dockerfile: Dockerfile # 指定 Dockerfile 的位置
          tag_names: false # 是否将 release 的 tag 作为 docker image 的 tag
